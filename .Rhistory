inner_join(house, by = c("Household_ID" = "Household_ID")) |>
select(Total_household_income,
Disability_in_house,
Education) |>
group_by(Disability_in_house, Education) |>
summarize(Total_household_income_avg = mean(Total_household_income)) |>
mutate(Disability_in_house = case_when(
Disability_in_house == "1" ~ "Have Disability",
Disability_in_house == "2" ~ "Does not have Disability")) |>
arrange(Total_household_income_avg) |>
mutate(Education = factor(Education))
ggplot(data = hincome_education_disability, aes(
y = Total_household_income_avg,
x = fct_inorder(Education))) +
facet_wrap(~Disability_in_house,
ncol = 2) +
geom_col(fill = "#a1d99b") +
labs(title = "Distribution of Average Household Income by Education and Disability Status",
y = "Average Household Income",
x = "Education Level") +
scale_y_continuous(labels = scales::comma) +
theme(axis.text.x = element_text(angle = -15, vjust = 0.5, hjust=0.5))
# Do not edit this chunk unless you know what you are doing
knitr::opts_chunk$set(
echo = TRUE, message = FALSE, warning = FALSE
)
# Load all packages here
library(tidyverse)
# Import the data here:
house <- read_csv("data/house.csv")
family <- read_csv("data/family.csv")
person <- read_csv("data/person.csv")
joined_inner_person_house <- person |>
inner_join(house, by = c("Household_ID" = "Household_ID")) |>
pivot_longer(cols = Self_care: Any_disability,
names_to = "Disability",
values_to = "Values") |>
mutate(Disability2 = case_when(
Disability == "Any_disability" & Values == "2" ~ "No Disability",
Disability == "Any_disability" & Values == "1" ~ "Filter",
Values == "1" ~ Disability,
Values == "2" ~ "Filter")) |>
filter(Disability2 != "Filter") |>
select(Household_ID, Education, Disability2, Total_household_income) |>
group_by(Education, Disability2) |>
summarize(Average_household_income = mean(Total_household_income))
Education_level_sort_val <- factor(joined_inner_person_house$Education, levels = c("Less than HS", "HS only", "Some college", "Bachelor's or more"))
joined_inner_person_house$Disability2 <- factor(joined_inner_person_house$Disability2, labels = c("Ambulatory", "Cognitive", "Hearing", "Independent Living", "No Disability", "Self Care", "Vision"))
ggplot(data = joined_inner_person_house,
aes(x = Education_level_sort_val,
y = Average_household_income,
fill = Education_level_sort_val)) +
geom_col() +
labs(title = "Education vs. Average Household Income Among Different Types of Disabilities",
x = "Education Level",
y = "Average Household Income") +
facet_wrap(~Disability2) +
coord_flip() +
scale_fill_discrete(name = "Education Level")
# Function to create the education distribution plot
create_education_distribution_plot <- function(data, disability_status) {
# Filter the dataset based on the provided disability status
filtered_data <- data |>
filter(Any_disability == disability_status)
# Plot with the filtered dataset
plot <- ggplot(data = filtered_data, aes(x = Education, fill = as.factor(Education))) +
geom_bar() +
scale_fill_brewer(palette = "Set3") +
labs(title = paste("Distribution of Education among People with",
ifelse(disability_status == 1, "Disabilities", "No Disabilities")),
fill = "Education Level") +
theme_minimal()
return(plot)
}
# Call the function for people with disabilities (Any_disability == 1)
plot_disabilities <- create_education_distribution_plot(person, disability_status = 1)
# Call the function for people without disabilities (Any_disability == 2)
plot_no_disabilities <- create_education_distribution_plot(person, disability_status = 2)
# Display the plots, depending on which plot you want to display the title will also change
plot_disabilities
plot_no_disabilities
# Do not edit this chunk unless you know what you are doing
knitr::opts_chunk$set(
echo = TRUE, message = FALSE, warning = FALSE
)
# Load all packages here
library(tidyverse)
# Import the data here:
house <- read_csv("data/house.csv")
family <- read_csv("data/family.csv")
person <- read_csv("data/person.csv")
joined_person_family <- person |>
inner_join(family,
by = c("Household_ID" = "Household_ID")) |>
select(Household_ID,
Personally_year_income_in_2021,
Any_disability,
Family_type,
Education) |>
distinct() |>
mutate(Any_disability = case_when(
Any_disability == "1" ~ "Have disability",
Any_disability == "2" ~ "No disability")) |>
group_by(Education, Any_disability, Family_type) |>
mutate(Mean_personal_income = mean(Personally_year_income_in_2021))
graph <- function(data, x_var, y_var, color_var, facet_var) {
data |>
ggplot(aes(x = {{ x_var }},
y = fct_reorder({{ y_var }}, {{ x_var }}),
fill = {{ color_var }})) +
geom_col(position = "dodge") +
facet_wrap(vars({{ facet_var }})) +
scale_x_continuous(labels = scales::comma) +
labs(title = "Mean personal income, education and disability for different types of family",
subtitle = "In the United States in 2021",
fill = "Any disability",
x = "Mean personal income",
y = "Education",
caption = "Source: CPS-Annual Social and Economic (ASEC) Supplements") +
theme(plot.title = element_text(hjust = 0.45),
plot.subtitle = element_text(hjust = -0.2))
}
graph(joined_person_family, Mean_personal_income, Education, Any_disability, Family_type)
house |>
inner_join(family, by = c("Household_ID" = "Household_ID")) |>
mutate(disability_in_house = case_when(Disability_in_house == 1 ~ "Yes",
Disability_in_house == 2 ~ "No")) |>
mutate(family_children = case_when(
Family_type == "Married couple family" & Children_under_six == "Any under age 6" ~ "Married with children under age six",
Family_type == "Not married" & Children_under_six == "Any under age 6" ~ "Unmarried with children under age six",
Family_type == "Married couple family" & Children_under_six == "None under age 6" ~ "Married without children under age six",
Family_type == "Not married" & Children_under_six == "None under age 6" ~ "Unmarried without children under age six")) |>
group_by(disability_in_house, family_children) |>
mutate(median_income = median(Total_household_income)) |>
mutate(median_disability_income = median(Household_disability_income)) |>
mutate(median_non_disability_income = median_income - median_disability_income) |>
select(disability_in_house, family_children, median_disability_income, median_non_disability_income) |>
distinct() |>
pivot_longer(cols = median_disability_income:median_non_disability_income, names_to = "income_type", values_to = "income_amount") |>
mutate(income_type = case_when(
income_type == "median_disability_income" ~ "Disability income",
income_type == "median_non_disability_income" ~ "Non-disability income")) |>
ggplot(aes(x = disability_in_house, y = income_amount, fill = income_type)) +
facet_wrap(vars(family_children)) +
labs(title = "Household Income for Disabled vs. Non-Disabled Individuals",
x = "Presence of Disability in Household",
y = "Median Household Income ($)",
fill = "Income Type",
subtitle = "In the United States in 2022",
caption = "Source: CPS-Annual Social and Economic (ASEC) Supplements") +
geom_col() +
scale_fill_manual(values = c("steelblue1", "springgreen4")) +
theme_minimal()
# Do not edit this chunk unless you know what you are doing
knitr::opts_chunk$set(
echo = TRUE, message = FALSE, warning = FALSE
)
# Load all packages here
library(tidyverse)
# Import the data here:
house <- read_csv("data/house.csv")
family <- read_csv("data/family.csv")
person <- read_csv("data/person.csv")
house_fixed <- house |>
select(!("...1"))
family_fixed <- family |>
select(!("...1"))
person_fixed <- person |>
select(!("...1"))
house_family_joined <- house_fixed |>
full_join(family_fixed, by = c("Household_ID" = "Household_ID"))
family_person_joined <- person_fixed |>
full_join(family_fixed, by = c("Household_ID" = "Household_ID", "Family_ID" = "Family_ID")) |>
rename_all(tolower) |>
filter(!is.na(any_disability)) |>
mutate(any_disability = case_when(any_disability == 1 ~ "Disabled",
any_disability == 2 ~ "Non-Disabled"))
family_person_joined |>
group_by(labor_force_status)
create_barplot <- function(data, x_var, y_var, f_var) {
data |>
ggplot(aes(x = {{ x_var }} ,
y = {{ y_var }} ,
fill = {{ f_var }})) +
geom_col(position = "dodge")
}
mean_income_joined <- house_family_joined |>
group_by(Disability_in_house, Family_type) |>
summarize(mean_household_income = mean(Total_household_income)) |>
mutate(Disability_in_house = case_when(
Disability_in_house == 1 ~ "Yes",
Disability_in_house == 2 ~ "No"))
mean_income_pivot <- mean_income_joined |>
pivot_wider(names_from = Family_type,
values_from = mean_household_income)
print.data.frame(mean_income_pivot)
# Write your code to create your first table or graph here:
create_barplot(data = mean_income_joined,
x_var = Disability_in_house,
y_var = mean_household_income,
f_var = Family_type) +
scale_y_continuous(labels = scales::comma) +
labs(title = "Household Income by Disability Status",
x = "Disabled Household Member",
y = "Mean Household Income",
fill = "Family Type")
# Write your code to create your second table or graph here:
ggplot(data = family_person_joined,
aes(x = labor_force_status,
y = personally_year_income_in_2021)) +
geom_boxplot() +
facet_wrap(~ any_disability) +
scale_y_log10(labels = scales::dollar_format()) +
coord_flip() +
labs(title = "Labor Force Status vs. Personal Income For People With and Without Disabilities",
x = "Labor Force Status",
y = "Personal Income In 2021") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
axis.text.y = element_text(angle = 45),
plot.title = element_text(hjust = 1))
# Do not edit this chunk unless you know what you are doing
knitr::opts_chunk$set(
echo = TRUE, message = FALSE, warning = FALSE
)
library(tidyverse)
library(dplyr)
house <- read_csv("data/house.csv")
family <- read_csv("data/family.csv")
person <- read_csv("data/person.csv")
household_data <- person |>
filter(Any_disability == 1) |>
group_by(Nativity, Labor_force_status) |>
count(Nativity, Labor_force_status) |>
mutate(percent = n * 100 / case_when(
Nativity == "Foreign-born" ~ 529,
TRUE ~ 5564))
ggplot(household_data, aes(as.factor(Labor_force_status), percent)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Nativity)) +
coord_flip() +
labs(Title = "Disabled Foreign-born and Native-born Persons by Employment Status",
x = "Labor Force Status",
y = "Percentage of Disabled Individuals")
family_house_joined<- family |>
full_join(house,
by = c("Household_ID" = "Household_ID")) |>
select(Household_ID:Received_disability_income,  Disability_in_house:Total_household_income)
family_house_joined_pivoted <- family_house_joined |>
pivot_wider(names_from = Received_disability_income, values_from = Total_household_income) %>%
rename_at("2", ~"Total_Income_No_Disability_Income") %>%
rename_at("1", ~"Total_Income_Some_Disability_Income")
ggplot(data = family_house_joined) +
aes(x = Total_household_income,
y = Household_disability_income) +
geom_point() +
geom_jitter(height = 0.15) +
labs(title = "Relationship between Household Disability Income and Total Household Income ",
x = " Total Household Income",
y = "Household Disability Income") +
theme_minimal()
#Function that when given a Household ID number, returns whether that household receives disability income, total household income, and if applicable the total household disability income.
income_household <- function(ID) {
family_house_joined_pivoted |>
filter(Household_ID == ID) |>
summarize(Household_disability_income, Total_Income_No_Disability_Income, Total_Income_Some_Disability_Income)
}
#Function calls:
income_household("1")
income_household("23")
income_household("5")
# Do not edit this chunk unless you know what you are doing
knitr::opts_chunk$set(
echo = FALSE, message = FALSE, warning = FALSE
)
# Load all packages here
library(tidyverse)
library(RColorBrewer)
# Import the data here:
house <- read_csv("data/house.csv")
family <- read_csv("data/family.csv")
person <- read_csv("data/person.csv")
# Write your code to create your first table or graph here:
scatter_plot <-
function(data, x_var, y_var, color_var, position, size, alpha) {
data|>
ggplot(aes(x = {{x_var}},
y = {{y_var}},
color = {{color_var}})) +
geom_point(position = position,
size = size,
alpha = alpha)
}
house_person <- person |>
full_join(house,
by = c("Household_ID" = "Household_ID")) |>
select(Household_ID, Person_ID, Self_care : Any_disability,
Number_of_persons_in_house, Personally_year_income_in_2021,
Total_household_income) |>
filter(Any_disability == 1)|>
mutate(Household_average_personal_income =
Total_household_income /
Number_of_persons_in_house)
house_person <- house_person %>%
mutate(Number_of_disability = rowSums(house_person[, c("Self_care", "Hearing", "Vision", "Independent_living", "Ambulatory", "Cognitive")] == 1))
scatter_plot(house_person,
Personally_year_income_in_2021,
Household_average_personal_income,
Number_of_disability,
"jitter",
2,
0.6) +
labs( x = "Personal Annual Income (dollars)",
y = "Average personal income within household",
title ="Personal annual income vs. Average personal income within household, 2021 (dollars)",
color = "Number of disability") +
scale_color_gradient(low = "#ffeda0", high = "#f03b20") +
scale_x_continuous(labels = scales::number_format(scale = 1, accuracy = 1)) +
scale_y_continuous(labels = scales::number_format(scale = 1, accuracy = 1)) +
theme_minimal() +
theme(axis.title = element_text(size = 10),
axis.text = element_text(size=6))
# Write your code to create your second table or graph here:
person_household_joined <- person |>
inner_join(house, by = c("Household_ID" = "Household_ID")) |>
filter(Any_disability == 1) |>
select(Household_ID, Person_ID, Labor_force_status:Cognitive, Disability_in_house, Household_disability_income, Education, Total_household_income) |>
pivot_longer(cols = Self_care:Cognitive,
names_to = "Disability",
values_to = "Value") |>
group_by(Disability, Education) |>
filter(Value == 1) |>
summarize(education_level = n())
person_household_joined$Education <- factor(person_household_joined$Education, levels = c("Less than HS", "HS only", "Some college", "Bachelor's or more"))
person_household_joined$Disability <- factor(person_household_joined$Disability, labels = c("Vision", "Self Care", "Independent Living", "Hearing", "Cognitive", "Ambulatory"))
ggplot(data = person_household_joined,
aes(x = Disability,
y = education_level,
fill = Education)) +
geom_col(position = position_dodge(preserve = "single")) +
coord_flip() +
labs(y = "Count",
fill = "Education Completed",
title = "Count of Different Education Levels across Types of Disabilties")
# Do not edit this chunk unless you know what you are doing
knitr::opts_chunk$set(
echo = FALSE, message = FALSE, warning = FALSE
)
# Load all packages here
library(tidyverse)
library(RColorBrewer)
# Import the data here:
house <- read_csv("data/house.csv")
family <- read_csv("data/family.csv")
person <- read_csv("data/person.csv")
# Write your code to create your first table or graph here:
scatter_plot <-
function(data, x_var, y_var, color_var, position, size, alpha) {
data|>
ggplot(aes(x = {{x_var}},
y = {{y_var}},
color = {{color_var}})) +
geom_point(position = position,
size = size,
alpha = alpha)
}
house_person <- person |>
full_join(house,
by = c("Household_ID" = "Household_ID")) |>
select(Household_ID, Person_ID, Self_care : Any_disability,
Number_of_persons_in_house, Personally_year_income_in_2021,
Total_household_income) |>
filter(Any_disability == 1)|>
mutate(Household_average_personal_income =
Total_household_income /
Number_of_persons_in_house)
house_person <- house_person %>%
mutate(Number_of_disability = rowSums(house_person[, c("Self_care", "Hearing", "Vision", "Independent_living", "Ambulatory", "Cognitive")] == 1))
scatter_plot(house_person,
Personally_year_income_in_2021,
Household_average_personal_income,
Number_of_disability,
"jitter",
2,
0.6) +
labs( x = "Personal Annual Income (dollars)",
y = "Average personal income within household",
title ="Personal annual income vs. Average personal income within household, 2021 (dollars)",
color = "Number of disability") +
scale_color_gradient(low = "#ffeda0", high = "#f03b20") +
scale_x_continuous(labels = scales::number_format(scale = 1, accuracy = 1)) +
scale_y_continuous(labels = scales::number_format(scale = 1, accuracy = 1)) +
theme_minimal() +
theme(axis.title = element_text(size = 10),
axis.text = element_text(size=6))
# Write your code to create your second table or graph here:
person_household_joined <- person |>
inner_join(house, by = c("Household_ID" = "Household_ID")) |>
filter(Any_disability == 1) |>
select(Household_ID, Person_ID, Labor_force_status:Cognitive, Disability_in_house, Household_disability_income, Education, Total_household_income) |>
pivot_longer(cols = Self_care:Cognitive,
names_to = "Disability",
values_to = "Value") |>
group_by(Disability, Education) |>
filter(Value == 1) |>
summarize(education_level = n())
person_household_joined$Education <- factor(person_household_joined$Education, levels = c("Less than HS", "HS only", "Some college", "Bachelor's or more"))
person_household_joined$Disability <- factor(person_household_joined$Disability, labels = c("Vision", "Self Care", "Independent Living", "Hearing", "Cognitive", "Ambulatory"))
ggplot(data = person_household_joined,
aes(x = Disability,
y = education_level,
fill = Education)) +
geom_col(position = position_dodge(preserve = "single")) +
coord_flip() +
labs(y = "Count",
fill = "Education Completed",
title = "Count of Different Education Levels across Types of Disabilties")
getwd()
setwd("/Users/lauraedwards/Documents/GitHub/SDS291FinalProject")
library(tidyverse)
library(AMR)
survivor <- read_csv('eval.csv')
survivor <- survivor[-106, ]
ggplot(data = survivor, mapping = aes(x = age)) + geom_boxplot()
# Janet Carbin, Heather Aldret, Mike Turner, and Mike Gabler are the old players
IQR(survivor$age)
quantile(survivor$age, p = 0.25)
quantile(survivor$age, p = 0.75)
# being poc, negative attitude, b4
length(which(survivor$poc == "POC" & survivor$Attitude == 0 & survivor$season %in% c(36, 37, 38, 39, 40)))
# being poc, positive attitude, b4
length(which(survivor$poc == "POC" & survivor$Attitude == 1 & survivor$season %in% c(36, 37, 38, 39, 40)))
# being non-poc, negative attitude, b4
length(which(survivor$poc != "POC" & survivor$Attitude == 0 & survivor$season %in% c(36, 37, 38, 39, 40)))
length(which(survivor$poc != "POC" & survivor$Attitude == 1 & survivor$season %in% c(36, 37, 38, 39, 40)))
length(which(survivor$poc == "POC" & survivor$Attitude == 0 & survivor$season %in% c(41, 42, 43, 44, 45)))
length(which(survivor$poc == "POC" & survivor$Attitude == 1 & survivor$season %in% c(41, 42, 43, 44, 45)))
length(which(survivor$poc != "POC" & survivor$Attitude == 0 & survivor$season %in% c(41, 42, 43, 44, 45)))
length(which(survivor$poc != "POC" & survivor$Attitude == 1 & survivor$season %in% c(41, 42, 43, 44, 45)))
# effect size = odds ratio = ad/bc. 11 out of 32 (96 players overall) POC players had positive attitude before. 11 out of 52 (89 players overall) POC players had positive attitude after
(11*41) / (11 * 21)
# 95% CI for odds ratio of odds of negative pre v. odds of negative post for POC = 0.727 to 5.241
ggplot(data = survivor,
mapping = aes(x = as.factor(Attitude),
fill = as.factor(poc) )) +
geom_bar() +
facet_wrap(~div_rules) +
labs(title = "Initial Attitudes of POC and White Players Pre- and Post- Implementation of Diversity Casting Rules on CBS's Survivor",
fill = "POC Status"
) +
scale_fill_discrete(labels = c("White", "POC")) +
scale_x_discrete(labels=c("Negative", "Positive")) +
xlab("Attitude") +
ylab("Count")
# summary table
survivor |>
group_by(div_rules) |>
summarize(mean_compound_score = mean(`Compound Score`),
mean_age = mean(age),
number_of_players = n())
survivor$season <- as.factor(survivor$season)
survivor.lm <- glm(Attitude ~ poc * div_rules + season, data = survivor, family = "binomial")
summary(survivor.lm)
survivor.lm.1 <- glm(Attitude ~ poc * div_rules + age + season, data = survivor, family = "binomial")
summary(survivor.lm.1)
survivor.lm.2 <- glm(Attitude ~ poc * div_rules + age + gender + season, data = survivor, family = "binomial")
summary(survivor.lm.2)
library(tidyverse)
library(AMR)
survivor <- read_csv('eval.csv')
survivor <- survivor[-106, ]
survivor$age <- survivor$age - 18
ggplot(data = survivor, mapping = aes(x = age)) + geom_boxplot()
# Janet Carbin, Heather Aldret, Mike Turner, and Mike Gabler are the old players
IQR(survivor$age)
quantile(survivor$age, p = 0.25)
quantile(survivor$age, p = 0.75)
library(tidyverse)
library(AMR)
survivor <- read_csv('eval.csv')
survivor <- survivor[-106, ]
survivor$age_adj <- survivor$age - 18
view(survivor)
survivor$season <- as.factor(survivor$season)
survivor.lm <- glm(Attitude ~ poc * div_rules + season, data = survivor, family = "binomial")
summary(survivor.lm)
survivor.lm.1 <- glm(Attitude ~ poc * div_rules + age + season, data = survivor, family = "binomial")
summary(survivor.lm.1)
survivor.lm.2 <- glm(Attitude ~ poc * div_rules + age_adj + gender + season, data = survivor, family = "binomial")
summary(survivor.lm.2)
emplogitplot1(Attitude ~ log(age), data = survivor, ngroups = 10)
library(AMR)
emplogitplot1(Attitude ~ log(age), data = survivor, ngroups = 10)
library(tidyverse)
library(AMR)
library(Stat2Data)
survivor <- read_csv('eval.csv')
survivor <- survivor[-106, ]
survivor$age_adj <- survivor$age - 18
emplogitplot1(Attitude ~ log(age), data = survivor, ngroups = 10)
emplogitplot1(Attitude ~ sqrt(age), data = survivor, ngroups = 10)
emplogitplot1(Attitude ~ sqrt(age_adj), data = survivor, ngroups = 10)
emplogitplot1(Attitude ~ age_adj + age_adj^2, data = survivor, ngroups = 10)
emplogitplot1(Attitude ~ age_adj^2, data = survivor, ngroups = 10)
emplogitplot1(Attitude ~ (age_adj)^2, data = survivor, ngroups = 10)
emplogitplot1(Attitude ~ (age_adj)**2, data = survivor, ngroups = 10)
emplogitplot1(Attitude ~ log(age), data = survivor, ngroups = 10)
emplogitplot1(exp(Attitude) ~ age, data = survivor, ngroups = 10)
emplogitplot1(log(Attitude) ~ age, data = survivor, ngroups = 10)
emplogitplot1(sqrt(Attitude) ~ age, data = survivor, ngroups = 10)
emplogitplot1(I(sqrt(Attitude)) ~ age, data = survivor, ngroups = 10)
emplogitplot1(Attitude ~ age, data = survivor, ngroups = 10)
